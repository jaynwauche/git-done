message1 = 'Invalid response, respond with 1 or 2'
message2 = 'Invalid response, respond with 1, 2, or 3'
message3 = 'Login successful'
message4 = 'login was not successful try again'

def message_log(message):
    '''
    input:
          messages like error messages and other user feedbacks
    output:
           display of message whenever user enters a wrong input
    '''
    print(message)
    return message

def read_file(staff_file):
    '''
    input:
        pre-defined staff details in the staff.txt file
    output:
        dictionary containing pre-defined staff details,
    '''
    global d
    d = {} # d is the dictionary that holds the staff predefined details
    with open(staff_file, 'r') as file:
        for line in file:
            (key, val) = line.split()
            d[str(key)] =  val
    return d

def staff_login():
    '''
    input:
        staff action
    output:
        staff action
    '''
    staff_login = eval(input('1 Staff Login \n2 Close App\n'))
    return staff_login

def staff_id_confirmation(user_login_name, user_login_password):
    '''
    input:
        dictionary values of staff pre-defined details
    output:
        necessary actions after validation of staff details(wether valid or not)
    '''
    if (user_login_name == d['username1'] and user_login_password == d['password1']) or\
       (user_login_name == d['username2'] and user_login_password == d['password2']):
        message_log(message3)
    else:
        print(message_log(message4))
        staff_login() 

def customer_account_number_creator():
    '''
    input:
        nil
    output:
        customer account number, which starts from 0 + 9 randomly generated no.s
    '''
    global account_number
    account_number ='0'
    from random import randint
    for i in range(9):
        digits = randint(0, 9)
        account_number += str(digits)
    return account_number

def customer_account_file(customer_file,
                          account_name,
                          opening_balance,
                          account_type,
                          account_email,
                          account_number):
    '''
    input:
         account details entered by the staff while creating customer account
    output:
        customer account file(a txt file)
    '''
    customer_details = open(customer_file, 'w')
    customer_details.write(f'''Account Name: {account_name}
Opening Balance: {opening_balance}
Account Type: {account_type}
Account E_mail: {account_email}
Account Number: {account_number}''')
    customer_details.close()

def user_session_file(username, password):
    '''
    input:
        username and password supplied during staff login
    output:
        a user_session file(txt format)
    '''
    global user_session
    user_session = open('user_session.txt', 'w')
    user_session.write(f'''username: {username}
password: {password}''')
    user_session.close()
    return user_session

def customer_details_checker():
    '''
    input:
        account number generated by the system after customer account has been craeted
    output:
       details of customer account as contained in the customer file 
    '''
    acct_number = input('Enter account number:\n')
    customer_details = open('customer.txt', 'r')
    customer = customer_details.read()
    if acct_number in customer:
        print(customer)
    else:
        message_log(message)
    return customer_details

def file_delete(user_session_file):
    '''
    input:
        user_session file created after successful login of staff
    output:
        user_session file will be removed from directory
    '''
    import os
    os.remove(user_session_file)

def main():
    '''
    This is the main function that integrates all other functions and runs them as one
    '''
    while True:
        try:
            staff_login = eval(input('1 Staff Login \n2 Close App\n'))
        except NameError:
            message_log(message1)
            continue
        except SyntaxError:
            message_log(message1)
            continue
        if staff_login == 1:
            username = input('Username: ')
            password = input('password: ')
            read_file('staff.txt')
            staff_id_confirmation(username, password)
            user_session_file(username, password)
            while True:
                try:
                    customer_action = eval(input('1 Create New Bank Account \n2 Check Account Details \n3 Logout\n'))
                except NameError:
                    message_log(message2)
                    continue
                except SyntaxError:
                    message_log(message2)
                    continue
                if customer_action == 1:
                    account_name = input('Account Name:\n')
                    opening_balance = eval(input('Opening Balance(NGN):\n'))
                    account_type = input('Account Type(savings, current, Fixed Deposit):\n')
                    account_email = input('E_mail address:\n')
                    print('Your account number is:',customer_account_number_creator())
                    customer_account_file('customer.txt',account_name,opening_balance,account_type,account_email,account_number)
                elif customer_action == 2:
                    customer_details_checker()
                elif customer_action == 3:
                    break
        elif staff_login == 2:
            file_delete('user_session.txt')
            break
        else:
            message_log(message1)
main()
